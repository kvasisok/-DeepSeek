#!/data/data/com.termux/files/usr/bin/bash
# Полный путь к интерпретатору Termux

# Логирование
LOG_FILE="$HOME/storage/shared/FOOTBALL/update.log"
echo "=== Запуск обновления $(date) ===" >> "$LOG_FILE"

# Переходим в директорию проекта
cd "$HOME/storage/shared/FOOTBALL" || {
    echo "Ошибка: Не удалось перейти в директорию проекта" >> "$LOG_FILE"
    exit 1
}

# 1. Обновление данных команд
echo "Запуск reliable_parser.py..." >> "$LOG_FILE"
python3 api/reliable_parser.py --full-update >> "$LOG_FILE" 2>&1

# 2. Обновление погодных данных
echo "Запуск weather_api_parser.py..." >> "$LOG_FILE"
python3 api/weather_api_parser.py --update-pending >> "$LOG_FILE" 2>&1

# 3. Создание бэкапа
echo "Запуск backup_manager.sh..." >> "$LOG_FILE"
bash backup_manager.sh >> "$LOG_FILE" 2>&1

echo "Обновление завершено $(date)" >> "$LOG_FILE"

# Логирование ошибок (добавьте в конец файла)
ERROR_LOG="$HOME/storage/shared/FOOTBALL/error.log"
{
    # Ваши существующие команды...
    echo "=== Запуск обновления $(date) ==="
    python3 api/reliable_parser.py --full-update
    python3 api/weather_api_parser.py --update-pending
    bash backup_manager.sh
    echo "=== Обновление завершено $(date) ==="
} > "$LOG_FILE" 2> "$ERROR_LOG"

# Проверка ошибок
if [ -s "$ERROR_LOG" ]; then
    echo "=== Ошибки ===" >> "$LOG_FILE"
    cat "$ERROR_LOG" >> "$LOG_FILE"
    # Для уведомлений в Termux:
    termux-notification --title "Football API Error" --content "$(head -n 3 "$ERROR_LOG")"
fi
